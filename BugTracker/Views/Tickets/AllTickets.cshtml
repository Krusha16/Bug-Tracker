@model IPagedList<BugTracker.Models.Ticket>

@{
    ViewBag.Title = "AllTickets";
}

@using PagedList;
@using PagedList.Mvc;

<h2>AllTickets</h2>
<br />

<div class="navigate">
    <div class="nav1">
        @if (ViewBag.Roles.Contains("Submitter"))
        {
            <div class="creat">
                <button class="submitButton" type="button">
                    <p class="link">
                        @Html.ActionLink("Create New Ticket", "Create", "Tickets", null, new { style = "color: white;text-decoration:none" })
                    </p>
                </button>
            </div>
        }
        @if (ViewBag.Roles.Contains("Project Manager") || ViewBag.Roles.Contains("Admin"))
        {
            <div class="creat">
                <button class="submitButton" type="button">
                    <p class="link">
                        @Html.ActionLink("Create New Project", "Create", "Projects", null, new { style = "color: white;text-decoration:none" })
                    </p>
                </button>
            </div>
        }
        <div class="creat">
            <button class="submitButton" type="button">
                <p class="link">
                    @Html.ActionLink("View All Your Projects", "AllProjects", "Projects", null, new { style = "color: white;text-decoration:none" })
                </p>
            </button>
        </div>
    </div>
    <div class="nav2">
        <div class="dList">
            <p class="dListTitle" style="font-size:15px;padding-top:5px;"><b>Filter by: </b></p>
            <div class="dropdown">
                <button class="dropbtn2"><i class="fas fa-caret-square-down fa-2x"></i></button>
                <div class="dropdown-content-two">
                    <a class="" href="@Url.Action("SortTickets", "Tickets", new { sortBy = "type" })">TYPES</a>
                    <a class="" href="@Url.Action("SortTickets", "Tickets", new { sortBy = "status" })">STATUS</a>
                    <a class="" href="@Url.Action("SortTickets", "Tickets", new { sortBy = "priority" })">PRIORITY</a>
                    <a class="" href="@Url.Action("SortTickets", "Tickets", new { sortBy = "creation" })">CREATION</a>
                    <a class="" href="@Url.Action("SortTickets", "Tickets", new { sortBy = "update" })">RECENTLY</a>
                    <a class="" href="@Url.Action("SortTickets", "Tickets", new { sortBy = "title" })">TITLE</a>
                    <a class="" href="@Url.Action("SortTickets", "Tickets", new { sortBy = "owner" })">OWNER</a>
                    <a class="" href="@Url.Action("SortTickets", "Tickets", new { sortBy = "developer" })">DEVELOPER</a>
                    <a class="" href="@Url.Action("SortTickets", "Tickets", new { sortBy = "project" })">PROJECT</a>
                </div>
            </div>
        </div>
        <div class="notification">
            <div class="one">
                <a href="@Url.Action("Index", "Notifications", new { style = "color: white;text-decoration:none;margin-left:100%" })" style="font-size:20px">
                    <i class="fa fa-bell"></i>(@ViewBag.NotificationCount)
                </a>
            </div>
        </div>
    </div>
</div>
<br />
<table class="table">
    <tr>
        <th>
            Assigned User
        </th>
        <th>
            Ticket Owner
        </th>
        <th>
            Project Name
        </th>
        <th>
            Ticket Priority
        </th>
        <th>
            Ticket Status
        </th>
        <th>
            Ticket Type
        </th>
        <th>
            Ticket Title
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Created)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Updated)
        </th>
        <th>
            Menu
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AssignedToUser.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerUser.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                <div class="dropdown">
                    <button class="dropbtn"><i class="fas fa-caret-square-down fa-2x"></i></button>
                    <div class="dropdown-content">
                        <a class="" href="@Url.Action("Edit", "Tickets", new { id = item.Id})">Edit</a>
                        <a class="" href="@Url.Action("Details", "Tickets", new { id = item.Id})">Details</a>
                        <a class="" href="@Url.Action("Delete", "Tickets", new { id = item.Id})">Delete</a>
                        @if (ViewBag.Roles.Contains("Project Manager") || ViewBag.Roles.Contains("Admin"))
                        {
                            <a class="" href="@Url.Action("AssignDeveloperToTicket", "Tickets", new { id = item.Id })">Assign Developer</a>
                            <a class="" href="@Url.Action("UpdateStatus", "Tickets", new { id = item.Id })">Update Status</a>
                        }
                    </div>
                </div>
            </td>
        </tr>
    }
</table>

@Html.PagedListPager(Model, i => Url.Action("AllTickets", "Tickets", new { i }))
