@model IPagedList<BugTracker.Models.Ticket>

@{
    ViewBag.Title = "AllTickets";
}

<h2>AllTickets</h2>

@using PagedList;
@using PagedList.Mvc;

<div class="navigate">
    <div class="nav1">
        <div class="create">
            @if (ViewBag.Roles.Contains("Submitter"))
            {
                <p>
                    @Html.ActionLink("Create New Ticket", "Create", "Tickets")
                </p>
            }
            @if (ViewBag.Roles.Contains("Project Manager") || ViewBag.Roles.Contains("Admin"))
            {
                <p>
                    @Html.ActionLink("Create New Project", "Create", "Projects")
                </p>
            }
            <p>
                @Html.ActionLink("View All Your Projects", "AllProjects", "Projects")
            </p>
        </div>
    </div>
    <div class="navigate">
        <div>
            <button class="question" type="button"><p class="link"> @Html.ActionLink("TYPES", "SortTickets", "Tickets", new { sortBy = "type" }, new { style = "color: white;text-decoration:none" }) </p></button>

            <button class="question" type="button"><p class="link"> @Html.ActionLink("STATUS", "SortTickets", "Tickets", new { sortBy = "status" }, new { style = "color: white;text-decoration:none" }) </p></button>

            <button class="question" type="button"><p class="link"> @Html.ActionLink("PRIORITY", "SortTickets", "Tickets", new { sortBy = "priority" }, new { style = "color: white;text-decoration:none" }) </p></button>

            <button class="question" type="button"><p class="link"> @Html.ActionLink("CREATION", "SortTickets", "Tickets", new { sortBy = "creation" }, new { style = "color: white;text-decoration:none" }) </p></button>

            <button class="question" type="button"><p class="link"> @Html.ActionLink("RECENTLY UPDATED", "SortTickets", "Tickets", new { sortBy = "update" }, new { style = "color: white;text-decoration:none" }) </p></button>

            <button class="question" type="button"><p class="link"> @Html.ActionLink("TITLE", "SortTickets", "Tickets", new { sortBy = "title" }, new { style = "color: white;text-decoration:none" }) </p></button>

            <button class="question" type="button"><p class="link"> @Html.ActionLink("OWNER", "SortTickets", "Tickets", new { sortBy = "owner" }, new { style = "color: white;text-decoration:none" }) </p></button>

            <button class="question" type="button"><p class="link"> @Html.ActionLink("DEVELOPER", "SortTickets", "Tickets", new { sortBy = "developer" }, new { style = "color: white;text-decoration:none" }) </p></button>

            <button class="question" type="button"><p class="link"> @Html.ActionLink("PROJECT", "SortTickets", "Tickets", new { sortBy = "project" }, new { style = "color: white;text-decoration:none" }) </p></button>
        </div>
    </div>
</div>


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().AssignedToUser.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().OwnerUser.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Project.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().TicketPriority.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().TicketStatus.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().TicketType.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Created)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Updated)
        </th>
        <th>
            Comments:
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AssignedToUser.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerUser.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                @foreach (var comment in item.TicketComments)
                {
                    <div class="">
                        <p>@comment.Comment, Date:@comment.Created.ToString("d")</p>
                    </div>
                }
                <br />
                @using (Html.BeginForm("AddTicketComment", "Tickets", new { ticketId = item.Id}, FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="">
                        @Html.TextArea("content", "")
                        @Html.HiddenFor(modelItem => item.Id)
                    </div>
                    <div>
                        <button type="submit" class="question"><p class="link"> Add Comment </p></button>
                    </div>
                }
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                @if (ViewBag.Roles.Contains("Project Manager") || ViewBag.Roles.Contains("Admin"))
                {
                    @Html.ActionLink("Assign Developer", "AssignDeveloperToTicket", new { id = item.Id })
                    <br />
                    @Html.ActionLink("Update Status", "UpdateStatus", new { id = item.Id })
                }
            </td>
        </tr>
    }
</table>

@Html.PagedListPager(Model, i => Url.Action("AllTickets", "Tickets", new { i }))
