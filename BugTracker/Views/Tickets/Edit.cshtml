@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ticket</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketTypeId, "TicketTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketPriorityId, "TicketPriorityId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Created)
            @Html.Label("Created")
            @Html.DisplayFor(model => model.Created)
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Updated)
            @Html.Label("Updated")
            @Html.DisplayFor(model => model.Updated)
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.ProjectId)
            @Html.Label("Project")
            @Html.DisplayFor(model => model.Project.Name)
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.OwnerUserId)
            @Html.Label("Owner")
            @Html.DisplayFor(model => model.OwnerUser.UserName)
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.AssignedToUserId)
            @Html.Label("Assigned Developer")
            @Html.DisplayFor(model => model.AssignedToUser.UserName)
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.TicketStatusId)
            @Html.Label("Status")
            @Html.DisplayFor(model => model.TicketStatus.Name)
        </div>
        <div>
            <input type="submit" value="Save" class="submitButton" />
        </div>        
    </div>
}
<br />
<button class="submitButton" type="button">
    <p class="link">
        @Html.ActionLink("Back to List", "Index", null, new { style = "color: white;text-decoration:none" })
    </p>
</button>
